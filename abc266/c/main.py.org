#!/usr/bin/env python3
import sys
sys.setrecursionlimit(4100000)
import math
def error(*args, end="\n"): print("[stderr]", *args, end=end, file=sys.stderr)
from bisect import bisect, bisect_left, bisect_right
from collections import defaultdict, deque
MOD = 998244353
INF = float("inf")
MINF = -float("inf")

# A,B=map(int, input().split())      # (2)数字が2つ以上で別々に受け取り  入力例:A B
p = [] #[] for ii in range(4)]
for ii in range(4):
    x, y = map(int, input().split())
    p.append((x,y))

# 直線AB
if (p[2][0] - p[0][0]) != 0:
    A = (p[2][1] - p[0][1]) / (p[2][0] - p[0][0])
else:
    A = 0
B = p[0][1] - A * p[0][0]

# 直線CD
if (p[3][0] - p[1][0]) != 0:
    C = (p[3][1] - p[1][1]) / (p[3][0] - p[1][0])
else:
    C = 0
D = p[1][1] - C * p[1][0]

# 交点
if (A-C) != 0:
    cross_x = -1 * (B-D)/(A-C)
    cross_y = A* cross_x + B
else:
    # x軸は同じ
    print("No")
    exit(0)

# 線分ACに属しているか
maxX = max(p[2][0], p[0][0])
minX = min(p[2][0], p[0][0])
maxY = max(p[2][1], p[0][1])
minY = min(p[2][1], p[0][1])
#print(minX, maxX, minY, maxY)
if minX <= cross_x <= maxX and minY <= cross_y <= maxY:
    print("Yes")
else:
    print("No")
